package study.spring.myapp.controller;

import java.util.Arrays;

import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import study.spring.myapp.model.UserVO;

@Controller
public class RequestController {
	public RequestController() {
		System.out.println("RequestCon 작동!");
	}

	//RequestMapping은 어떤 URI로 이 메서드를 동작시킬 것인가에 대한 설정입니다.
	@RequestMapping("/request/test")
	public String testCall() {
		System.out.println("/request/test요청이 들어옴!");
		return "test";
	}
	
	@RequestMapping("/request/req")
	public String req() {
		System.out.println("/request/req요청이 들어옴!");
		return "request/req-ex01";
	}
	
	@RequestMapping(value="/request/basic01", method=RequestMethod.GET)
	@GetMapping("/request/basic01")
	public String basicGet() {
		System.out.println("/request/basic01요청이 들어옴:GET");
		return "request/req-ex01";
	}

	@RequestMapping(value="/request/basic01", method=RequestMethod.POST)
	@GetMapping("/request/basic01")
	public String basicPost() {
		System.out.println("/request/basic01요청이 들어옴:post");
		return "request/req-ex01";
	}
	
	//컨트롤러의 요청메서드를 void리턴타입으로 지정.
		@GetMapping("/req-ex02")
		public void reqEx02() {
			System.out.println("/request/req-ex02 요청!");
		}
	
	//http://localhost:8080/request/param?name=jj&age=20
	//이렇게 치면 콘솔에 
//	/request/param요청: GET
//	이름: jj
//	나이: 20

	@GetMapping("/request/param")
	public String paramTest(HttpServletRequest request) {
		System.out.println("/request/param요청: GET");
		String name=request.getParameter("name");
		String age= request.getParameter("age");
		
		System.out.println("이름: "+name);
		System.out.println("나이: "+age);
		
		return "";
	}
	
	////////////////////////////////////////////////////
	@GetMapping("/join")
	public String register() {
		System.out.println("/request/join : Get");
		return "request/join";
	}
	/*
	#1. 전통적인 jsp/servlet의 파라미터 읽기처리 방법
		-HttpServletRequest객체를 사용
	 
	@PostMapping("/join")
	public String register(HttpServletRequest request) {
		System.out.println("/request/join : POST");
		
		System.out.println("ID: " + request.getParameter("userId"));
		System.out.println("PW: " + request.getParameter("userPw"));
		System.out.println("HOBBY: " 
		   + Arrays.toString(request.getParameterValues("hobby")));		
		
		return "request/join";
	}
	*/
	
	/*
	 # 2. @RequestParam 아노테이션을 이용한 요청 파라미터 처리
	 
	@PostMapping("/join")
	public void register(@RequestParam("userId") String id, 
						@RequestParam("userPw") String pw,
						@RequestParam(value="hobby", required=false, defaultValue="no hobby person") List<String> hobbys) {
		
		System.out.println("ID: " + id);
		System.out.println("PW: " + pw);
		System.out.println("HOBBY: " + hobbys.toString());
		
	}
	*/
	
	/*
	 # 3. 커맨드 객체를 활용한 파라미터 처리
	 */
	
	@PostMapping("/join")
	public String register(UserVO user) {
		System.out.println("ID: "+user.getUserId());
		System.out.println("PW: "+user.getUserPw());
		System.out.println("NAME: "+user.getUserName());
		System.out.println("HOBBY: "+user.getHobby());
		
		return "request/join";
	}
	
	@GetMapping("/request/quiz")
	public String quiz() {
		System.out.println("/request/quiz : GET");
		return "request/req-quiz";
	}
	
//	@PostMapping("/quiz")
//	public String quiz(UserVO user) {
//		if(user.getUserId().equals("abc1234")&&user.getUserPw().equals("xxx4321")) {
//			return "request/login-success";
//		}
//		else {
//			return "request/login-fail";
//		}
//		
//	}
	
	//RequestMapping을 자바 4.x이후에 나온후 중복이 가능하게끔 
	//스프링 버전 관계없이 사용할수 있게끔 
	@RequestMapping(value="/quiz", method=RequestMethod.POST)
	public String quiz(UserVO user) {
	
		if(user.getUserId().equals("abc1234") 
				&& user.getUserPw().equals("xxx4321"))
			return "request/login-success";
		else
			return "request/login-fail";
	}
	
}
