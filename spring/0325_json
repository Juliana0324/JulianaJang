	<!-- json형태로 파싱해주는 라이브러리 -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.9.8</version>
		</dependency>
		
    	/*
	 # 	@ResponseBody
		-리턴 데이터를 viewResolver에 전달하지 않고 
		클라이언트에게 해당 데이터를 바로 응답하게 한다
	 * */
	
	
	@GetMapping("/hello")
	@ResponseBody
	public String hello() {
		return "Hello world!";
	}
  
  기존 hello world.jsp를 찾았다면
  ResponseBody사용해서 바로 출력가능
  
  
  
  //@Controller
@RestController //스프링 4이상부터 사용가능
@RequestMapping("/rest")
public class RestControllerTest {
	/*
	 # 	@ResponseBody
		-리턴 데이터를 viewResolver에 전달하지 않고 
		클라이언트에게 해당 데이터를 바로 응답하게 한다
	 * */
	
	
	@GetMapping("/hello")
	@ResponseBody
	public String hello() {
		return "Hello world!";
	}
	
	@GetMapping("/hobbys")
	public List<String> hobbys(){
		List<String> hobbys = Arrays.asList("축구", "수영", "음악감상");
		return hobbys;
	}
	
	@GetMapping("/study")
	@ResponseBody
	public Map<String, Object> study(){
		Map<String, Object> subject = new HashMap<>();
		subject.put("java", "자바");
		subject.put("JSP", "Java Server Pages");
		subject.put("Spring", "spring framework");
		return subject;
		
	}
	
	@GetMapping("/person")
	@ResponseBody
	public Person person() {
		Person p =new Person();
		p.setName("김철수");
		p.setAge(20);
		p.setHobbys(Arrays.asList("수영", "축구", "요리"));
		return p;
	}
}







////////////////////////////////////////////////////////////////////////////////////////////////////
//JSON사용법

//UserController
//회원가입 요청처리
	//Rest-api 에서 Insert ->Post
	
	@PostMapping("/")
	@ResponseBody
	public String register(@RequestBody UserVO user) {
		System.out.println("/user/POST 요청 발생");
		System.out.println("param: "+user);
		service.register(user);
		
		return "joinSuccess";
		
		
		
//PostMan 코드
{
    "account": "zzz4321",
    "password": "xxx4321!",
    "name": "박삐삐"
}



//삭제기능
//	//(기존)회원 탈퇴 처리
//	@RequestMapping(value="/", method=RequestMethod.POST)
	@DeleteMapping("/{account}")
	public String delete(@PathVariable String account) {
		System.out.println("/user/"+account+ ":delete 요청발생");
		
		service.delete(account);
		return "delSuccess";
	}
	

//postMan
DELETE --> http://localhost/user/abc1234
로 설정하기


///////////////////////////////////////////////////////////////////////////////////////////////
UserMapper.java
	//회원정보 조회기능
	UserVO selectOne(String account);
	
	//회원정보 전체 조회
	List<UserVO> selectAll();
	
	
	
	//한계정 조회기능
	@GetMapping("/{account}")
	public UserVO selectOne(@PathVariable String account){
		System.out.println("/user/: "+account+"GET 요청발생!");
		service.selectOne(account);
		return service.selectOne(account);
	}
	
	//회원 전체 조회기능
	@GetMapping("/")
	public List<UserVO> selectAll(){
		System.out.println("/user/: GET 요청발생!");
		return service.selectAll();
	}
	
	
	
	
