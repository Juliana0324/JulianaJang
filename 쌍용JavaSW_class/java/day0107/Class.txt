class (설계도)
 - 참조형 데이터형 : 값은 메모리의 다른곳에 저장되고 그 주소를 저장하는 데이터형
 - 사용자 정의 자료형 : 자바에서 제공하는 데이터형을 조합하여 새로운 데이터형을 생성

class 종류: 7개
class, interface, abstract class, inner class, nested class, local class, anonymous class

OOP 코딩 순서: 
1. 대상선정 - 구현해야할 대상
2. 객체 모델링(추상화) - 대상의 공통특징 뽑는 것
3. 클래스 작성 - 뽑아낸 공통특징으로 설계도 작성
4. 객체화 - 설계도 사용해 구현체 만들기
5. 객체 사용 - 구현체 사용


* class diagram : 
 - UML( Unified Modeling language )- 통합모델링 언어 중 하나
 - 클래스의 구조와 클래스간의 관계를 도형으로 표현한 것.

*클래스
	___________________________________
	|	클래스명		    |  	=> 접근지정자 클래스명
	-----------------------------------
	|	    변수		    |	=> 접근지정자 변수명: 데이터형
	-----------------------------------
	| 	   메소드		    |	=> 접근지정자 method명(데이터형) 반환형
	------------------------------------


 접근 지정자 
 + : public 
 # : protected
 - : private, default


 관계 선으로 표현
  ----------------------------
  ----------------------------▶ 상속관계
  ----------------------------▷ 구현관계


* 마카 클래스 ex) 
	___________________________________
	| + Marker		    |  	=> 접근지정자 클래스명
	-----------------------------------
	| - cap: int 		    |	=> 접근지정자 변수명: 데이터형
	| - body: int 		    |
	| - color: String		    |
	-----------------------------------
	| +write(String) : String	    |	=> 접근지정자 method명(데이터형) 반환형
	------------------------------------


 * useMarker클래스 
	___________________________________
	| + UseMarker		    |  	
	-----------------------------------
	| +static main(String[] args)	    |	
	------------------------------------


 ★ 클래스는 메인메소드 x

class 
 - 참조형 데이터형(class, String, array)
  : 값은 다른곳에 저장되고 그 시작주소를 가지는 데이터형
  : heap영역에 저장
  : heep 을 사용하려면 new 라는 키워드를 사용  
 - heap에 생성되는것을 객체라고 함
 - 참조형 데이터형의 크기는 알 수없음
 - 주소 체계는 4byte 체계

 - 참조형 데이터형에 값을 저장하기 위한 문법은
 class명 객체명 = new 생성자( );
 1. 생성자와 같은 이름의 클래스가 가지고있는 instance변수가 heap에 생성하고
 2, 그 주소를 객체에 할당한다


● setter method
 - instance(member) variable에 값을 설정할 목적으로 만드는 method

 [ 작성법 ]
 public void set변수명-첫글자대문자 (매개변수){
	this.변수명 = 변수명;
 }

 ● getter method
 - instance(member) variable 에 설정된 값을 얻을 목적으로 만드는 method

 [작성법]
 public 반환형 get변수명(){
	return 변수명;
}
 

