변수(Variable)
- 목적: 프로그램에서 필요한 값을 메모리에 일시적으로 저장하고 사용하기 위해
 - instance variavle, static variable, local variable 3가지 제공
  member variable = class variable

 - 선언하는 위치에 따라 구분
						_
 class 클래스명{					 |
	변수선언: instance, static, variable		 |
	public static void main(String[] args){		 | - class field
		변수선언- 로컬변수			 |
	}					 |
}						-


* 주의 : 같은 영역에서는 같은 이름의 변수 선언 x

* instance variable(member variable)
 - class field에 선언하는 변수
 - 객체생성시 메모리(heap)에 할당

[작성법] 
- 접근 지정자 데이터형 변수명 ; 
  1. 접근 지정자 (access Modifier) : 인스턴스 변수의 사용범위 설정 (public < protected < default < private )
	[폴더개념의 접근지정자 - 패키지 개념(1개만 사용가능)]
	- public : 모든 클래스에서 접근가능
	- protected : 같은 패키지의 다른 클래스에서 접근가능 / 자식이 아닌 다른패키지에 소속된 클래스에 접근x
	- default : 다른 패키지에 소속된 클래스에 접근x
	- private  : 모든 외부 클래스 접근 x
	
	[메모리 개념의 접근지정자]
	static : 공용메모리에 생성 
	final : 값 변경 불가
	transient: 객체 직렬화 방지 키워드(Stream을 타고 밖으로 나갈수 x)

 2. 데이터형 : 기본형 데이터형, 참조형 데이터형

 ex) 
 1. public int test { } //외부 접근
 2. private int test { } //내부 접근
 3. (default) double test{ } //r같은 패키지의 다른 클래스에서 접근 가능하지만, 패키지가 다르다면 접근x



● 객체화 : 인스턴스 변수를 사용하기 위해 메모리에 올려놓는것
 [문법]
 클래스명 객체명 = new 클래스명( );

 class Test{
	int i=0;
	public static void main(String[] args){
		Test test = new Test( );
		test.i = 5;

	}

 }



● 변수의 사용: 객체명으로 사용
	객체명.변수명 = 값;
	ex) t.i = 10;


------------------------------------------------------------------------------------------------------
● static(class) variable :
 - class field에 선언되는 변수
 - 공용변수
 - 자바 프로그램이 실행되면 메모리에 올라간다
 - 객체화 하지않고 사용가능, [ 클래스이름. 변수명 ]으로 사용가능
 - 클래스의 모든 영역에서 사용가능 
 - 자동 초기화
 - 참조 속도 빠름

[ 사용법 ]  
 1 . 값 할당
	접근지정자 static 데이터형 변수명;
 2. 값 사용
 	클래스명,변수명 


메모리에 빨리올라가는 순 : static -> instance -> local

ex)
 class Test{
	static int i;
	public static void main(String[] args){
	   i = 10; //같은 static 영역임으로 상ㅅㅇ가능
	 System.out.println( i );

	// 또는
	Test.i = 100;


    }

}

