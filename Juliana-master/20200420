
'''
# 예제 6] 이미지(데이터) 파일 복사하기
# 1. open, 읽기(rb): b 옵션은 바이너리 (binary-2진수 처리)
file=open('imgjpg1.jpg','rb')

# 2. 작업(읽기, 쓰기)
rdata = file.read()             # rdata : 2진수 처리

# 3. 파일 닫기
file.close()


# ==> 이미지복사 쓰기
file = open('readdata.jpg','wb')     # 위와 같이 b 로 사용하기
size = file.write(rdata)
print('복사한 파일의 사이즈 : {} bytes'.format(size))
file.close()

# 문제3) 웹상 이미지파일 다운 
# 다운받은 파일을 'D:\test'폴더 생성후 파이썬 프로그램 이용
# 다운받은 이미지를 복사하세요

file = open('universe.jpg','rb')            # 슬래시 두개로 escape
rbdata = file.read()
file.close()

file = open('D://test//readdata.jpg','wb')
size= file.write(rbdata)
file.close()
'''


# 예외처리
# 예외 : 프로그램에서 벌어지는 예외적인 상황을 의미함 (ex) 에러..  

#예) 
# - 파일을 읽고자 할때에 그파일이나 디렛터리가 존재하지 않는 경우
# - 어떤 값을 0으로 나누고자할때
# - 배열의 인덱스 범위를 벗어났을 때 
# - 사용자의 요구대로 진행되지 않는 경우


# 예외 처리 형식
# try:                  # 예외 처리 시작(예외 검증) 
#       예외 처리 검증 사항1
#       예외 처리 검증 사항2
# except: (예외 코드 = Error 코드)
#       예외 처리 상황에 따른 진행코드1
#       에외 처리 상황에 따른 진행코드2

# 예제1) 검증 내용은 두수를 나누기 할때 검증\
try : 
    num1 = int(input('첫번쨰 정수 입력:'))
    num2 = int(input('두번쨰 정수 입력: '))
    Div = num1/num2
    print('나눗셈 결과 : ', Div)

# 입력값 오류: ValueError
# 0으로 나누었을떄 오류 : ZeroDivisionError
except ValueError: 
    print('정수값을 입력하세요!!')
except ZeroDivisionError:
    print('0으로 나눌수 없습니다.')
print('예외처리 이후 프로그램 진행')

# 예제 2) try ~ except ~ else 구문
# try :         # 예외 검증
#   종속문장 (예외검증1)
#   종속문장 (예외검증2)
#   종속문장 (예외검증3)
#
# ...
# except (예외코드): 
#   종속문장 (예외검증1)
#   종속문장 (예외검증2)
# ... 
# else:
#   종속문장 (예외발생하지 않은 경우)1
#   종속문장 (예외발생하지 않은 경우)2


# 입력값에 대한 예외 처리
try : 
    num = int(input('수 입력: '))
except ValueError:
    print('정수만 입력하세요')
else: 
    print('입력한 값 출력 {} -> 예외 처리 없는 경우 실행'.format(num))

print('예외문이외에 프로그램 코드 실행')


# 파일 관련 예외 처리(FileNotFoundError => 파일이나 디렉토리 못찾는 경우)
try : 
    file = open('test10.txt','r',encoding='utf-8')
    buf = file.read()
    print(buf)
except FileNotFoundError:
    print('파일이나 디렉터리가 존재하지 않습니다.')
else:
    file.close()
    print('문제없이 잘 실행했습니다.')
    
# 강제 예외처리
# raise Exception(): 예외발생 시킴 (일반적인 예외에 존재하지 않는 경우 예외를 발생시킴)
# Exception()은 ()안에 예외에 대한 내용을 기술 

# try ~ except ~ else ~ finally ~:
# 1) try 조건 확인 2) except 발생시 except를 발생안하면, else를실행
# 3) finally는 무조건 실행

 
# 문제 나이를 입력받아 프로그램을 만들때에, 입력값이 잘못된 경우 예외 처리:
# 발생 가능예외 :
#   1) ValueError ===> 정수값 이외의 입력
#   2) raise Exceptrion('예외 사항') ==> 0보다 적을때에
#
# 예외 검증후 정상 출력은 : '당신의 나이는 20살입니다.' else 
# 마지막에 '프로그램을 종료합니다' 출력 ==> finally
#    

try :
    age= int(input('나이를 입력하세요: '))
    if age < 0:
        raise Exception('나이가 0보다는 적을수는 없습니다')
except ValueError:
    print('정수를 입력하세요')    
else: 
    print('당신의 나이는 {}살 입니다'.format(age))
finally:
    print('프로그램을 종료합니다')  
