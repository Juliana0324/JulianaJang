# Copy 기능
# -Shallow copy: 서로 다른 두 변수가 같은 윛의 데이터를 가르키는 경우
# lst1=[1,3,2]
# lst2 = lst1

# -deep copy: 두개의 변수가 같은 값을 가진 다른 공간의 데이터를 가르키는 경우
# lst1 = [1,3,2]
# lst2 = list(lst1)
# 별도의 공간
'''
# 예시1. Shallow copy
lst1 = [1,2,3,4,5]
lst2 = lst1
print('lst1의 값:',lst1, 'lst1의 주소:',id(lst1))
# id 값은 주소를 반환 하는 함수
print('lst2의 값:',lst2, 'lst2의 주소:',id(lst1))
# 이름만 다를뿐 주소는 같음(동일함)

lst1[1]='a'      # [1,'a',3,4,5]
print(lst1)
print(lst2)

# 예시2. Deep copy
lst1 = [1,2,3,4,5]
lst2 = list(lst1)
lst1[1]='a'

print('lst1의 값: ',lst1,'lst1의 주소:',id(lst1))
print('lst2의 값: ',lst2,'lst2의 주소:',id(lst2))

# Deep copy 사용 방법
# copy 모듈 사용
import copy
lst1=[1,2,3,4,5]
lst2=copy.deepcopy(lst1)    # deep copy 함수를 이용한 복사
lst3 = lst1                 # Shallow copy 
print(lst1,lst2)
print(id(lst1),'\t',id(lst2),'\t',id(lst3)) 
lst2[0] = 100
print(lst1,lst2)

# 동일한 데이터 사용시 Shallow, 다른데이터 사용시 Deep copy

# 문제1. 리스트 초기값 [30,20,10]
lst1 = [30,20,10]

lst1.append(40)
print(lst1)

lst1.pop(3)
print(lst1)

lst1.sort()
print(lst1)

lst1.reverse()
print(lst1)

# 문제2. 
lst2 = [30,20,10]
idx=lst2.index(10)
print('10값의 위치는 ',idx)

lst2.insert(2,200)
print('insert 200의 리스트',lst2)

lst2.remove(200)
print('remove200의 리스트 ',lst2)

lst2.extend([555,666,555])
print('555,666,555를 추가한 리스트:', lst2)

x= lst2.count(555)
print('555의 개수',x)


# 2차(원) 리스트
# : 리스트 안에 멤버 중 리스트가 존재하는 경우
# (리스트 안에 리스트 멤버를 참조하는 방법)

# 예제1. 2차 리스트 변수값 참조
aa = [
    [1,2,3,4],
    [5,6,7,8],
    [9,10,11,12]
]                   # 멤버개수 : 3개
print(aa)

# : 4 출력방법
print(aa[0][3])     # 리스트aa 중 인덱스 0번째에 3번째 : 4 

aa = [
    [1,2,3,4],
    [5,6,7,8],
    [9,10,11,12]
]   
# for 반복구문과 len 사용 방법
for x in range(3):          # len() 사용시 : for x in range(len(aa))
    for y in range(4):      # len() 사용시 : for y in range(len(aa[x])):
        print(aa[x][y],end='\t')
    print()

# 예제2. 2차 리스트 생성 및 출력(참조)
lst1= []
lst2=[]            # 비어있는 리스트
value=1

for x in range(3):
    for y in range(4):
        lst1.append(value)      # x = 0일떄 , [1],[1,2],[1,2,3],[1,2,3,4]
        value += 1
    lst2.append(lst1)           # x = 0일때, [[1,2,3,4]]
                                # x = 1일떄, [[1,2,3,4],[5,6,7,8]]
    lst1=[]                     # clear사용하지 말것
print(lst2)

for i in range(3):
    for j in range(4):
        print(lst2[i][j],end='\t')
    print()



# 문제1. num = [10,20,30,40,50,60,70]  모든 값 더하기
num = [10,20,30,40,50,60,70]
i=0
Su=0
for x in range(7):
    Su += num[i]
    i += 1
print(Su)
print('\n')

# 혹은 
num = [10,20,30,40,50,60,70]
Su=0
for x in num:
    Su += x
print('num의 합:',Su)

# 1~45 까지 임의의 숫자 중복없이 6개 
from random import randint
for x in range(6):
    i = randint(1,45)
    if i != i:
        break
    print(i)
print('\n')

# 선생님 풀이
from random import random
lotto = []
cnt=0       # 6개 출력을 제어
while True:
    rand= int(random()*45)+1
    if rand not in lotto:
        lotto.append(rand)
        cnt += 1
        if cnt == 6:
            break
lotto.sort()
print('1~45까지 중복없는 임의의 값6개',lotto)
('\n')
# 문제 3. lst_sec=[['홍길동','남',36],['김수양','여',32],['박담수','남',28]]
lst_sec=[['홍길동','남',36],['김수양','여',32],['박담수','남',28]]

name=lst_sec[0][0]
gen=lst_sec[0][1]
age=lst_sec[0][2]
print('이름: ',name)
print('성별: ',gen)
print('나이: ',age)
print('\n')

#선생님 풀이
for val in lst_sec:
    print('이름:{}'.format(val[0]))
    print('성별:{}'.format(val[1]))
    print('나이:{}'.format(val[2]))
#or
for i in range(len(lst_sec)):
    for j in range(1):
        print('이름:{}'.format(lst_sec[i][j]))
        j += 1
        print('성별:{}'.format(lst_sec[i][j]))
        j += 1
        print('나이:{}'.format(lst_sec[i][j]))        

# or
tag = ['이름','성별','나이']      # tuple로 대체
for i in range(len(lst_sec)):
    for j in range(len(tag)):
        print("{} : {}".format(tag[j],lst_sec[i][j]))
    print()
'''
# 문제 4. 구구단을 출력하는 코드를 작석하되, 2차리스트에 결과 저장하고, 출력
gugu =[]
for x in range(2,10):
    gugu.append([])     #각단의 결과값을 저장할 하위 리스트
    for y in range(1,10):
        gugu[x-2].append(x*y)
print(gugu)

for x in range(2,10):
    for y in range(1,10):
        print('{}x{}={:<3}'.format(x,y,gugu[x-2][y-1]),end=' ')
    print()
print('\n')

'''
#(실습)
# 위에서 학습한 내용을 토대로 다음과 같은 내용을 프로그램하세요.
#  
#  아래와 같은 메뉴를 만들고, 친구 이름을 관리하는 코드를 작성
#  (리스트를 사용해서 작성하세요) 
 
 -------------------------
 1. 친구 리스트 출력          #등록한 친구 목록 보기
 2. 친구 추가                #친구 등록하기(정보는 문제3번 참조)            
 3. 친구 삭제                #등록 친구 삭제
 4. 이름 변경                #이름 변경
 0. 종료                     #프로그램 종료
 메뉴를 선택하세요 : 2
 이름을 입력하시오 : 홍길동
 -------------------------
'''
friend=[]
menu = int(input('1.친구리스트 출력; 2.친구 추가; 3.친구삭제; 4.친구삭제; 5.이름변경 ; 0.종료')) 
